version: '3.8'

services:
  backend:
    image: matiasjara1901244/proyectogps-backend:latest
    container_name: springboot-app
    #ports:
    #  - "8081:8081"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://dpg-d0sgjdemcj7s73f0as7g-a.oregon-postgres.render.com:5432/proyectogps?sslmode=require
      SPRING_DATASOURCE_USERNAME: gps
      SPRING_DATASOURCE_PASSWORD: D4bgSZVUlMYcx2fdtLvFED28lEl1Gsy5
  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    restart: always
    environment:
      DATA_SOURCE_NAME: "postgresql://gps:D4bgSZVUlMYcx2fdtLvFED28lEl1Gsy5@dpg-d0sgjdemcj7s73f0as7g-a.oregon-postgres.render.com:5432/proyectogps?sslmode=require"
    #ports:
    #  - "9187:9187"
    
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    #ports:
    #  - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "8003:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    restart: always
    #ports:
    #  - "9100:9100"

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    image: jenkins-with-docker
    container_name: jenkins
    ports:
      - "8004:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    user: root
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"
      JENKINS_SLAVE_AGENT_PORT: 0

volumes:
    grafana-data:
    jenkins_home:
  