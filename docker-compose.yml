version: '3.8'

services:
  backend:
    image: matiasjara1901244/proyectogps-backend:latest
    container_name: gps-backend
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://dpg-d1osq23uibrs73d4hrig-a.oregon-postgres.render.com:5432/postgresss_33h5?sslmode=require
      SPRING_DATASOURCE_USERNAME: postgresss_33h5_user
      SPRING_DATASOURCE_PASSWORD: 8lsWOLx1Ub4jFnMKJFrnTXZTBcJ2VgbH
    networks:
      - backend-net


  postgres_exporter:
    image: prometheuscommunity/postgres-exporter
    container_name: postgres_exporter
    restart: always
    networks:
      - backend-net
    environment:
      DATA_SOURCE_NAME: postgresql://postgresss_33h5_user:8lsWOLx1Ub4jFnMKJFrnTXZTBcJ2VgbH@dpg-d1osq23uibrs73d4hrig-a.oregon-postgres.render.com:5432/postgresss_33h5?sslmode=require
    
  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: always
    networks:
      - backend-net
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml

  grafana:
    image: grafana/grafana
    container_name: grafana
    restart: always
    ports:
      - "8003:3000"
    volumes:
      - grafana-data:/var/lib/grafana

  node_exporter:
    image: prom/node-exporter
    container_name: node_exporter
    restart: always
    networks:
      - backend-net

  jenkins:
    build:
      context: .
      dockerfile: Dockerfile.jenkins
    image: jenkins-with-docker
    container_name: jenkins
    ports:
      - "8004:8080"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    restart: always
    user: root
    environment:
      JAVA_OPTS: "-Djenkins.install.runSetupWizard=false"

networks:
  backend-net:
    external: true

volumes:
    grafana-data:
    jenkins_home:
  